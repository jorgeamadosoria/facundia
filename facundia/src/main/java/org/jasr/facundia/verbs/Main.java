package org.jasr.facundia.verbs;

public class Main {

    public static void main(String[] args) {

        String[][] arr = new String[][]{
        new String[] {"LMS 1","tags: tc-lms","tc-lms"},
        new String[] {"LMS 2","tags: tc-lms2","tc-lms2"},
        new String[] {"LMS 3","tags: tc-lms3","tc-lms3"},
        new String[] {"LMS 4","tags: tc-lms4","tc-lms4"}
        };
        
        String jobTemplate = "<joblist>  <job>  <description></description>    <dispatch>      <excludePrecedence>true</excludePrecedence>      <keepgoing>false</keepgoing>      <rankOrder>ascending</rankOrder>      <threadcount>1</threadcount>    </dispatch>    <executionEnabled>true</executionEnabled>    <group>{name}</group>    <loglevel>INFO</loglevel>    <name>Shutdown</name>    <nodefilters>      <filter>name: {filter}</filter>    </nodefilters>    <nodesSelectedByDefault>true</nodesSelectedByDefault>    <scheduleEnabled>true</scheduleEnabled>    <sequence keepgoing='false' strategy='node-first'>      <command>        <exec>nohup /data/servers/{tc-name}/bin/shutdown.sh</exec>      </command>      <command>        <exec>sleep 5</exec>      </command>      <command>        <exec>kill -9 $(ps -ef | grep -m 1 {tc-name} | awk '{ print $2 }')</exec>      </command>    </sequence>  </job>  <job>  <description></description>    <dispatch>      <excludePrecedence>true</excludePrecedence>      <keepgoing>false</keepgoing>      <rankOrder>ascending</rankOrder>      <threadcount>1</threadcount>    </dispatch>    <executionEnabled>true</executionEnabled>    <group>{name}</group>    <loglevel>INFO</loglevel>    <name>Startup</name>    <nodefilters>      <filter>name: {filter}</filter>    </nodefilters>    <nodesSelectedByDefault>true</nodesSelectedByDefault>    <scheduleEnabled>true</scheduleEnabled>    <sequence keepgoing='false' strategy='node-first'>      <command>        <exec>nohup /data/servers/{tc-name}/bin/startup.sh</exec>      </command>    </sequence>  </job>  <job>  <description></description>    <dispatch>      <excludePrecedence>true</excludePrecedence>      <keepgoing>false</keepgoing>      <rankOrder>ascending</rankOrder>      <threadcount>1</threadcount>    </dispatch>    <executionEnabled>true</executionEnabled>    <group>{name}</group>     <loglevel>INFO</loglevel>    <name>Status</name>    <nodefilters>      <filter>name: {filter}</filter>    </nodefilters>    <nodesSelectedByDefault>true</nodesSelectedByDefault>    <scheduleEnabled>true</scheduleEnabled>    <sequence keepgoing='false' strategy='node-first'>      <command>        <exec>ps -ef | grep {tc-name}</exec>      </command>    </sequence>   </job>   <job>    <description></description>    <dispatch>      <excludePrecedence>true</excludePrecedence>      <keepgoing>false</keepgoing>      <rankOrder>ascending</rankOrder>      <threadcount>1</threadcount>    </dispatch>    <executionEnabled>true</executionEnabled>    <group>{name}</group>    <loglevel>INFO</loglevel>    <multipleExecutions>true</multipleExecutions>    <name>Restart</name>    <nodefilters>      <filter>name: {filter}</filter>    </nodefilters>    <nodesSelectedByDefault>true</nodesSelectedByDefault>    <scheduleEnabled>true</scheduleEnabled>    <sequence keepgoing='true' strategy='step-first'>      <command>        <jobref group='{name}' name='Shutdown' />      </command>      <command>        <jobref group='{name}' name='Startup' />      </command>    </sequence>  </job>  <job>    <description></description>    <dispatch>      <excludePrecedence>true</excludePrecedence>      <keepgoing>true</keepgoing>      <rankOrder>ascending</rankOrder>      <threadcount>4</threadcount>    </dispatch>    <executionEnabled>true</executionEnabled>    <group>{name}</group>    <loglevel>INFO</loglevel>    <multipleExecutions>true</multipleExecutions>    <name>Truncate logs</name>    <nodefilters>      <filter>name: {filter}</filter>    </nodefilters>    <nodesSelectedByDefault>true</nodesSelectedByDefault>    <scheduleEnabled>true</scheduleEnabled>    <sequence keepgoing='false' strategy='node-first'>      <command>        <exec>cd /var/log/{tc-name}; truncate --size 0 *.log; truncate --size 0 *.txt; truncate --size 0 *.out</exec>      </command>    </sequence>  </job>  <job>    <description></description>    <dispatch>      <excludePrecedence>true</excludePrecedence>      <keepgoing>true</keepgoing>      <rankOrder>ascending</rankOrder>      <threadcount>4</threadcount>    </dispatch>    <executionEnabled>true</executionEnabled>    <group>{name}</group>    <loglevel>INFO</loglevel>    <multipleExecutions>true</multipleExecutions>    <name>Remove logs</name>    <nodefilters>      <filter>name: {filter}</filter>    </nodefilters>    <nodesSelectedByDefault>true</nodesSelectedByDefault>    <scheduleEnabled>true</scheduleEnabled>    <sequence keepgoing='false' strategy='node-first'>      <command>        <exec>cd /var/log/{tc-name};rm *.log; rm *.txt; rm *.out</exec>      </command>    </sequence>  </job></joblist>";
        
        for(String[] a:arr){
            System.out.println(jobTemplate.replaceAll("\\{name\\}", a[0]).replaceAll("\\{filter\\}", a[1]).replaceAll("\\{tc-name\\}", a[2]));
        }
    }

}
